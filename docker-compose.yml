services:
    php:
        build: .
        container_name: amtradingplc-php
        working_dir: /app
        volumes:
            - .:/app
            - vendor:/app/vendor
            - node_modules:/app/node_modules
        ports:
            - "8000:8000"
        depends_on:
            - node
        environment:
            - DB_HOST=db
            - DB_DATABASE=amtradingplc
            - DB_USERNAME=root
            - DB_PASSWORD=root
            - APP_ENV=local
            - APP_DEBUG=true
            - COMPOSER_PROCESS_TIMEOUT=1200
            - COMPOSER_MEMORY_LIMIT=-1
            - COMPOSER_ALLOW_SUPERUSER=1
        command: >
            bash -c "if [ ! -f .env ]; then cp .env.example .env; fi && \
                     rm -f bootstrap/cache/*.php && \
                                         rm -f public/hot && \
                                         if [ ! -d vendor ] || [ -z "$(ls -A vendor 2>/dev/null)" ]; then \
                       composer install --no-interaction --no-progress; \
                     fi && \
                     php artisan key:generate --force && \
                     php artisan migrate --force && \
                     php artisan serve --host=0.0.0.0 --port=8000"
        restart: unless-stopped

    node:
        image: node:18-alpine
        container_name: amtradingplc-node
        working_dir: /app
        volumes:
            - .:/app
            - node_modules:/app/node_modules
        ports:
            - "5173:5173"
        environment:
            - APP_ENV=${APP_ENV:-local}
        command: >
            sh -c "(npm ci || npm install) && npm run dev -- --host 0.0.0.0 --port 5173"
        restart: unless-stopped

    db:
        image: mysql:8.0
        container_name: amtradingplc-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: amtradingplc
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "3306:3306"
        volumes:
            - db_data:/var/lib/mysql
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            timeout: 20s
            retries: 10

volumes:
    db_data:
    vendor:
    node_modules:
